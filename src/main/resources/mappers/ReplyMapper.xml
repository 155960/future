<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zengqiang.future.dao.ReplyMapper" >
  <resultMap id="BaseResultMap" type="com.zengqiang.future.pojo.Reply" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="root_comment_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="comment_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="reply_type" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="content" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="reply_user_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="reply_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, root_comment_id, comment_id, reply_type, content, user_id, reply_user_id, reply_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from reply
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from reply
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zengqiang.future.pojo.Reply" >
    insert into reply (id, root_comment_id, comment_id, 
      reply_type, content, user_id, 
      reply_user_id, reply_time)
    values (#{id,jdbcType=INTEGER}, #{rootCommentId,jdbcType=INTEGER}, #{commentId,jdbcType=INTEGER}, 
      #{replyType,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, 
      #{replyUserId,jdbcType=INTEGER}, #{replyTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.zengqiang.future.pojo.Reply" >
    insert into reply
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="rootCommentId != null" >
        root_comment_id,
      </if>
      <if test="commentId != null" >
        comment_id,
      </if>
      <if test="replyType != null" >
        reply_type,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="replyUserId != null" >
        reply_user_id,
      </if>
      <if test="replyTime != null" >
        reply_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="rootCommentId != null" >
        #{rootCommentId,jdbcType=INTEGER},
      </if>
      <if test="commentId != null" >
        #{commentId,jdbcType=INTEGER},
      </if>
      <if test="replyType != null" >
        #{replyType,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="replyUserId != null" >
        #{replyUserId,jdbcType=INTEGER},
      </if>
      <if test="replyTime != null" >
        #{replyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zengqiang.future.pojo.Reply" >
    update reply
    <set >
      <if test="rootCommentId != null" >
        root_comment_id = #{rootCommentId,jdbcType=INTEGER},
      </if>
      <if test="commentId != null" >
        comment_id = #{commentId,jdbcType=INTEGER},
      </if>
      <if test="replyType != null" >
        reply_type = #{replyType,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="replyUserId != null" >
        reply_user_id = #{replyUserId,jdbcType=INTEGER},
      </if>
      <if test="replyTime != null" >
        reply_time = #{replyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zengqiang.future.pojo.Reply" >
    update reply
    set root_comment_id = #{rootCommentId,jdbcType=INTEGER},
      comment_id = #{commentId,jdbcType=INTEGER},
      reply_type = #{replyType,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      reply_user_id = #{replyUserId,jdbcType=INTEGER},
      reply_time = #{replyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>